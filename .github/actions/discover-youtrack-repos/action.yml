name: Discover Repositories from YouTrack Ticket
description: Analyze a YouTrack ticket with AI agent and emit a JSON list of accessible repositories

inputs:
  ticket-id:
    description: 'YouTrack ticket ID'
    required: true
  ticket-title:
    description: 'YouTrack ticket title'
    required: true
  ticket-description:
    description: 'YouTrack ticket description'
    required: true
  github-organization:
    description: 'GitHub organization to check for repositories'
    required: true

runs:
  using: composite
  steps:
    - name: Build Discovery Prompt
      shell: bash
      run: |
        cat >>"$GITHUB_ENV" <<'EOF'
        PROMPT<<__PROMPT__
        Ticket ID: ${{ inputs.ticket-id }}
        Title: ${{ inputs.ticket-title }}
        Description: ${{ inputs.ticket-description }}

        Task:
        Find repositories that are EXPLICITLY mentioned in the ticket title or description text.

        What counts as explicit mention:
        - Direct repo names: "simple-todo", "user-service", "api-gateway"
        - Repository lists: "repositories: repo1, repo2" or "repos: repo1, repo2"
        - GitHub URLs: "https://github.com/org/repo-name"
        - Specific references: "update the simple-todo repository"

        What does NOT count:
        - General statements like "update the frontend" or "fix the API"
        - Vague references without specific repository names
        - Assumptions about what might need changes

        Instructions:
        - ONLY return repositories that are explicitly named in the ticket text
        - Validate accessibility in the ${{ inputs.github-organization }} org using gh
        - If NO repositories are explicitly mentioned or none of the repos are accessible return empty array
        - Write the result to a file named repos.json in the current directory
        - The file must contain JSON in the exact shape:
          { "repositories": ["org/repo", ...] }
        - If none explicitly found, write { "repositories": [] }
        - Do not output the JSON to stdout - only write the file
        __PROMPT__
        EOF

    - id: ai
      name: Discover Repositories with AI Agent
      shell: bash
      run: |
        set -euo pipefail

        # Save prompt to file to avoid shell escaping issues
        echo "$PROMPT" > /tmp/opencode_prompt.txt

        # Run AI agent
        set +e
        RESPONSE=$(opencode run "$(cat /tmp/opencode_prompt.txt)" 2>&1)
        EXIT_CODE=$?
        set -e
        rm -f /tmp/opencode_prompt.txt

        # Log response
        echo "AI agent exit code: $EXIT_CODE" >&2
        echo "AI agent response:" >&2
        echo "$RESPONSE" >&2

        # Check for errors
        if [ $EXIT_CODE -ne 0 ]; then
          echo "AI agent failed with exit code $EXIT_CODE" >&2
          exit $EXIT_CODE
        fi

        # Read and validate repos.json file written by AI
        if [ -f repos.json ]; then
          echo "Found repos.json file" >&2
          cat repos.json >&2
          REPOS_JSON=$(jq -c '.repositories // []' repos.json 2>/dev/null || echo '[]')
        else
          echo "Warning: repos.json not found, using empty array" >&2
          REPOS_JSON='[]'
        fi

        echo "Extracted repositories: $REPOS_JSON" >&2
        echo "repositories=$REPOS_JSON" >> "$GITHUB_OUTPUT"

outputs:
  repositories:
    description: 'Discovered repositories as a JSON array string (e.g., ["org/repo"])'
    value: ${{ steps.ai.outputs.repositories }}
